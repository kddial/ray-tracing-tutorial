{"version":3,"file":"static/js/main.chunk.js","sources":["/Users/kevindial/Workspace/ray-tracing-tutorial/src/index.css","/Users/kevindial/Workspace/ray-tracing-tutorial/src/app-main.tsx","/Users/kevindial/Workspace/ray-tracing-tutorial/src/canvas-main-gpu.tsx","webpack:///./src/index.css?bb0a","/Users/kevindial/Workspace/ray-tracing-tutorial/src/index.tsx","/Users/kevindial/Workspace/ray-tracing-tutorial/src/key-press.tsx","/Users/kevindial/Workspace/ray-tracing-tutorial/src/ray-functions.tsx","/Users/kevindial/Workspace/ray-tracing-tutorial/src/step.tsx","/Users/kevindial/Workspace/ray-tracing-tutorial/src/vector-functions.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n  margin: 0;\\n  overflow: hidden;\\n}\\n\\n#root {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.canvas-container {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ncanvas {\\n  width: 100%;\\n  max-width: 512px;\\n  image-rendering: optimizeSpeed;\\n  image-rendering: -moz-crisp-edges;\\n  image-rendering: -webkit-optimize-contrast;\\n  image-rendering: -o-crisp-edges;\\n  image-rendering: optimize-contrast;\\n  image-rendering: crisp-edges;\\n  image-rendering: pixelated;\\n  -ms-interpolation-mode: nearest-neighbor;\\n}\\n\\n.game-info {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  padding: 10px;\\n  color: white;\\n  font-family: monospace;\\n  font-size: 12px;\\n}\\n\\np {\\n  margin: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/index.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,YAAY;EACZ,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,8BAA8B;EAC9B,iCAAiC;EACjC,0CAA0C;EAC1C,+BAA+B;EAC/B,kCAAkC;EAClC,4BAA4B;EAC5B,0BAA0B;EAC1B,wCAAwC;AAC1C;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,OAAO;EACP,aAAa;EACb,YAAY;EACZ,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,SAAS;AACX\",\"sourcesContent\":[\"html,\\nbody {\\n  height: 100%;\\n  margin: 0;\\n  overflow: hidden;\\n}\\n\\n#root {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.canvas-container {\\n  width: 100%;\\n  height: 100%;\\n  background: black;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ncanvas {\\n  width: 100%;\\n  max-width: 512px;\\n  image-rendering: optimizeSpeed;\\n  image-rendering: -moz-crisp-edges;\\n  image-rendering: -webkit-optimize-contrast;\\n  image-rendering: -o-crisp-edges;\\n  image-rendering: optimize-contrast;\\n  image-rendering: crisp-edges;\\n  image-rendering: pixelated;\\n  -ms-interpolation-mode: nearest-neighbor;\\n}\\n\\n.game-info {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  padding: 10px;\\n  color: white;\\n  font-family: monospace;\\n  font-size: 12px;\\n}\\n\\np {\\n  margin: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// @ts-nocheck\nimport { useEffect, useRef, useState } from 'react';\nimport { setup, step } from './step';\n\n// Configuration\nexport const WIDTH = 256; // should match in kernalFunction\nexport const HEIGHT = 256;\n\nexport default function AppMain() {\n  const canvasRef1 = useRef<HTMLCanvasElement>(null);\n  const [isLocked, setIsLocked] = useState(false);\n  const [uiCameraAngleX, setUICameraAngleX] = useState(null);\n  const [uiCameraAngleY, setUICameraAngleY] = useState(null);\n  const [uiCameraOrigin, setUICameraOrigin] = useState([0, 0, 0]);\n  const [mouseSensitivity, setMouseSensitivity] = useState(null);\n\n  const setMouseSensitivityUi = (value) => {\n    if (value <= 0.05) {\n      setMouseSensitivity(0.05);\n    } else {\n      setMouseSensitivity(value);\n    }\n  };\n\n  useEffect(() => {\n    window.mouseSensitivity = mouseSensitivity;\n  }, [mouseSensitivity]);\n\n  useEffect(() => {\n    // init into global window space\n    setMouseSensitivity(0.2);\n\n    if (canvasRef1.current != null) {\n      const canvas = canvasRef1.current || {};\n      canvas.width = WIDTH;\n      canvas.height = HEIGHT;\n\n      const kernal = setup(canvas, setIsLocked);\n      step(kernal, setUICameraAngleX, setUICameraAngleY, setUICameraOrigin);\n    }\n  }, []);\n\n  return (\n    <div className=\"canvas-container\">\n      <canvas\n        id=\"canvas1\"\n        ref={canvasRef1}\n        style={{ border: isLocked ? 'none' : '3px solid yellow' }}\n      ></canvas>\n      <div className=\"game-info\">\n        <div>\n          <p\n            style={{ display: 'inline-block', paddingRight: 10, minWidth: 170 }}\n          >\n            Mouse Sensitivity: {roundTwoDec(mouseSensitivity)}\n          </p>\n          <button\n            onClick={() => {\n              setMouseSensitivityUi(mouseSensitivity - 0.05);\n            }}\n          >\n            -\n          </button>\n          <button\n            onClick={() => {\n              setMouseSensitivityUi(mouseSensitivity + 0.05);\n            }}\n          >\n            +\n          </button>\n        </div>\n        <p>Canvas locked: {isLocked ? 'true' : 'false'}</p>\n        <p>Camera AngleX: {roundTwoDec(uiCameraAngleX)}</p>\n        <p>Camera AngleY: {roundTwoDec(uiCameraAngleY)}</p>\n        <p>Camera Origin: {stringifyVectors(uiCameraOrigin)}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction stringifyVectors(vec: number[]) {\n  return `${roundTwoDec(vec[0])}, ${roundTwoDec(vec[1])}, ${roundTwoDec(\n    vec[2],\n  )}`;\n}\n\nfunction roundTwoDec(floatNum: number) {\n  return roundDec(floatNum, 2);\n}\n\nfunction roundDec(floatNum: number, decimalDigits: number) {\n  return Math.round(floatNum * 10 ** decimalDigits) / 10 ** decimalDigits;\n}\n","// @ts-nocheck\n\nimport { WIDTH, HEIGHT } from './app-main';\nimport { GPU } from 'gpu.js';\nimport vectorFunctions from './vector-functions';\nimport rayFunctions from './ray-functions';\n\nexport function canvasMainGpu(canvasRef) {\n  const gpu = new GPU({\n    mode: 'webgl', // cannot use \"gpu\" since webgl2 is not supported on safari\n    // mode: 'cpu', // debug in cpu mode\n    canvas: canvasRef,\n  });\n\n  vectorFunctions.forEach((vecFuncDefinition) => {\n    gpu.addFunction(...vecFuncDefinition);\n  });\n  rayFunctions.forEach((rayFunc) => {\n    gpu.addFunction(rayFunc);\n  });\n\n  const kernal = gpu.createKernel(kernalFunction, {\n    output: [WIDTH, HEIGHT],\n    graphical: true,\n  });\n\n  return kernal;\n}\n\nfunction kernalFunction(\n  cameraOriginRaw,\n  cameraAngleX,\n  cameraAngleY,\n  sphereEntities,\n  numSphereEntities,\n  planeEntities,\n  numPlaneEntities,\n  boxEntities,\n  numBoxEntities,\n) {\n  // constants\n  const PI = 3.1415926535897932385;\n  const LARGE_NUM = 999999999; // 9 nines\n\n  // canvas\n  const canvasWidth = 256;\n  const canvasHeight = 256;\n\n  // camera\n  const viewportHeight = 2;\n  const viewportWidth = 2;\n  const focalLength = 2;\n\n  // camera\n  const cameraOrigin = [\n    cameraOriginRaw[0],\n    cameraOriginRaw[1],\n    cameraOriginRaw[2],\n  ];\n  const cRadiansX = (cameraAngleX * PI) / 180;\n  const cRadiansY = (cameraAngleY * PI) / 180;\n  const cameraDirection = [\n    Math.cos(cRadiansX),\n    Math.sin(cRadiansY),\n    Math.sin(cRadiansX),\n  ];\n\n  // x,y,x => u,v,w\n  const vup = [0, 1, 0]; // vector up in the y-axis\n  const w = vecUnit(cameraDirection);\n  const u = vecCross(vup, w);\n  const v = vecCross(w, u);\n\n  const cameraHorizontal = vecMultiplyNum(u, viewportWidth);\n  const cameraVertical = vecMultiplyNum(v, viewportHeight);\n  let lowerLeftCameraOrigin = vecSubtract(\n    cameraOrigin,\n    vecDivideNum(cameraHorizontal, 2),\n  );\n  lowerLeftCameraOrigin = vecSubtract(\n    lowerLeftCameraOrigin,\n    vecDivideNum(cameraVertical, 2),\n  );\n  const lowerLeftCameraPlane = vecSubtract(\n    lowerLeftCameraOrigin,\n    vecMultiplyNum(w, focalLength),\n  );\n\n  // rays\n  const i = this.thread.x;\n  const j = this.thread.y;\n\n  const s = vecMultiplyNum(cameraHorizontal, i / (canvasWidth - 1));\n  const t = vecMultiplyNum(cameraVertical, j / (canvasHeight - 1));\n\n  const rayDirection = vecUnit(\n    vecSubtract(vecAdd(vecAdd(lowerLeftCameraPlane, s), t), cameraOrigin),\n  );\n\n  // cycle through sphere entities\n  let nearestSphereT = LARGE_NUM;\n  let nearestSphereCenter = [0, 0, 0];\n  for (let ii = 0; ii < numSphereEntities; ii++) {\n    const sphereRadius = sphereEntities[ii][0];\n    const sphereCenter = [\n      sphereEntities[ii][1],\n      sphereEntities[ii][2],\n      sphereEntities[ii][3],\n    ];\n    const t = hitSphere(cameraOrigin, rayDirection, sphereCenter, sphereRadius);\n    if (t > 0 && t < nearestSphereT) {\n      nearestSphereT = t;\n      nearestSphereCenter = sphereCenter;\n    }\n  }\n\n  // cycle through plane entities\n  let nearestPlaneT = LARGE_NUM;\n  let nearestPlaneCenter = [0, 0, 0];\n  for (let jj = 0; jj < numPlaneEntities; jj++) {\n    const planeRadius = planeEntities[jj][0];\n    const planeCenter = [\n      planeEntities[jj][1],\n      planeEntities[jj][2],\n      planeEntities[jj][3],\n    ];\n    const planeNormal = [\n      planeEntities[jj][4],\n      planeEntities[jj][5],\n      planeEntities[jj][6],\n    ];\n\n    const t = hitPlane(\n      cameraOrigin,\n      rayDirection,\n      planeCenter,\n      planeNormal,\n      planeRadius,\n    );\n    if (t > 0 && t < nearestPlaneT) {\n      nearestPlaneT = t;\n      nearestPlaneCenter = planeCenter;\n    }\n  }\n\n  // cycle through box entities\n  let nearestBoxT = LARGE_NUM;\n  let nearestBoxMin = [0, 0, 0];\n  for (let kk = 0; kk < numBoxEntities; kk++) {\n    const boxMin = [boxEntities[kk][0], boxEntities[kk][1], boxEntities[kk][2]];\n    const boxMax = [boxEntities[kk][3], boxEntities[kk][4], boxEntities[kk][5]];\n\n    const t = hitBox(cameraOrigin, rayDirection, boxMin, boxMax);\n    if (t > 0 && t < nearestBoxT) {\n      nearestBoxT = t;\n      nearestBoxMin = boxMin;\n    }\n  }\n\n  const canvasColor = rayColor(\n    cameraOrigin,\n    rayDirection,\n    nearestSphereT,\n    nearestSphereCenter,\n    nearestPlaneT,\n    nearestPlaneCenter,\n    nearestBoxT,\n    nearestBoxMin,\n  );\n  this.color(canvasColor[0], canvasColor[1], canvasColor[2]);\n}\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\",\n      function () {\n        content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppMain from './app-main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppMain />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const keyPress: { [key: string]: number } = {};\n\nfunction keyUpListener(event: KeyboardEvent) {\n  const eventKey = event.key.toLowerCase();\n  keyPress[eventKey] = 0;\n}\n\nfunction keyDownListener(event: KeyboardEvent) {\n  const eventKey = event.key.toLowerCase();\n  keyPress[eventKey] = Date.now();\n}\n\nwindow.addEventListener('keydown', keyDownListener, false);\nwindow.addEventListener('keyup', keyUpListener, false);\n\nexport default keyPress;\n","// @ts-nocheck\n\n// can refer for hitSphere or hitTriangle\n// https://github.com/evanw/lightgl.js/blob/master/src/raytracer.js\n\nexport function rayAt(\n  rayOrigin: number[],\n  rayDirection: number[],\n  t: number,\n): number[] {\n  return vecAdd(vecMultiplyNum(rayDirection, t), rayOrigin);\n}\n\nexport function hitSphere(\n  rayOrigin: number[],\n  rayDirection: number[],\n  sphereCenter: number[],\n  radius: number,\n): number {\n  const offsetCenter = vecSubtract(rayOrigin, sphereCenter);\n  const a = vecLengthSquared(rayDirection);\n  const halfB = vecDot(offsetCenter, rayDirection);\n  const c = vecLengthSquared(offsetCenter) - radius * radius;\n  const discriminant = halfB * halfB - a * c;\n\n  if (discriminant < 0) {\n    return -1;\n  } else {\n    return (-halfB - Math.sqrt(discriminant)) / a;\n  }\n}\n\nexport function hitPlane(\n  rayOrigin: number[],\n  rayDirection: number[],\n  planeCenter: number[],\n  planeNormal: number[],\n  planeRadius: number,\n): number {\n  const denominator = vecDot(planeNormal, rayDirection);\n  if (denominator < 0.00000001 && denominator > -0.00000001) {\n    return -1;\n  } else {\n    const numerator = vecDot(vecSubtract(planeCenter, rayOrigin), planeNormal);\n    const t = numerator / denominator;\n    const point = vecAdd(vecMultiplyNum(rayDirection, t), rayOrigin);\n    const distCenter = vecSubtract(point, planeCenter);\n\n    if (vecDot(distCenter, distCenter) <= planeRadius * planeRadius) {\n      return t;\n    } else {\n      return -1;\n    }\n  }\n}\n\n// boxMin is the lower left corner of box\n// boxMax is the upper right corner of box\n// Source: https://gamedev.stackexchange.com/questions/18436/most-efficient-aabb-vs-ray-collision-algorithms\n// Answer: https://gamedev.stackexchange.com/a/150467\n// Diagram: https://gamedev.stackexchange.com/a/39903\nexport function hitBox(\n  rayOrigin: number[],\n  rayDirection: number[],\n  boxMin: number[],\n  boxMax: number[],\n): number {\n  // x = 0;\n  // y = 1;\n  // z = 2;\n  let t = -1;\n  const t1 = (boxMin[0] - rayOrigin[0]) / rayDirection[0];\n  const t2 = (boxMax[0] - rayOrigin[0]) / rayDirection[0];\n\n  const t3 = (boxMin[1] - rayOrigin[1]) / rayDirection[1];\n  const t4 = (boxMax[1] - rayOrigin[1]) / rayDirection[1];\n\n  const t5 = (boxMin[2] - rayOrigin[2]) / rayDirection[2];\n  const t6 = (boxMax[2] - rayOrigin[2]) / rayDirection[2];\n\n  const tmin = Math.max(\n    Math.max(Math.min(t1, t2), Math.min(t3, t4)),\n    Math.min(t5, t6),\n  );\n  const tmax = Math.min(\n    Math.min(Math.max(t1, t2), Math.max(t3, t4)),\n    Math.max(t5, t6),\n  );\n\n  // if tmax < 0, ray is intersecting AABB, but the whole AABB is behind us\n  if (tmax < 0) {\n    t = tmax;\n    return -1;\n  }\n\n  // if tmin > tmax, ray doesn't intersect AABB\n  if (tmin > tmax) {\n    t = tmax;\n    return -1;\n  }\n\n  // if tmin < 0 then the ray origin is inside of the AABB and tmin is behind the start of the ray so tmax is the first intersection\n  if (tmin < 0) {\n    t = tmax;\n  } else {\n    t = tmin;\n  }\n  return t;\n}\n\nexport function raySkyColor(rayDirection: number[]): number[] {\n  const unit_direction = vecUnit(rayDirection);\n  const t = 0.5 * (unit_direction[1] + 1);\n  const color1 = vecMultiplyNum([1, 1, 1], 1 - t);\n  const color2 = vecMultiplyNum([0.5, 0.7, 1.0], t);\n  return vecAdd(color1, color2);\n}\n\nexport function rayColor(\n  rayOrigin: number[],\n  rayDirection: number[],\n  sphereT: number,\n  sphereCenter: number[],\n  planeT: number,\n  planeCenter: number[],\n  boxT: number,\n  boxMin: number[],\n): number[] {\n  const LARGE_NUM = 999999999;\n  let nearestT = LARGE_NUM;\n  let nearestEntityOrigin = [0, 0, 0];\n\n  if (sphereT === LARGE_NUM && planeT === LARGE_NUM && boxT === LARGE_NUM) {\n    return raySkyColor(rayDirection);\n  }\n\n  nearestT = Math.min(Math.min(sphereT, planeT), boxT);\n\n  if (nearestT === sphereT) {\n    nearestT = sphereT;\n    nearestEntityOrigin = sphereCenter;\n  } else if (nearestT === planeT) {\n    nearestT = planeT;\n    nearestEntityOrigin = planeCenter;\n  } else if (nearestT === boxT) {\n    nearestT = boxT;\n    nearestEntityOrigin = boxMin;\n  }\n\n  const normal = vecUnit(\n    vecSubtract(rayAt(rayOrigin, rayDirection, nearestT), nearestEntityOrigin),\n  );\n  return vecMultiplyNum(vecAddNum(normal, 1), 0.5);\n}\n\nexport const rayFunctions = [\n  rayAt,\n  hitSphere,\n  raySkyColor,\n  rayColor,\n  hitPlane,\n  hitBox,\n];\nexport default rayFunctions;\n","// @ts-nocheck\nimport { canvasMainGpu } from './canvas-main-gpu';\nimport keyPress from './key-press';\nimport { vecAdd, vecMultiplyNum, vecUnit } from './vector-functions';\nimport Stats from 'stats.js';\n\nlet fpsStats = new Stats();\nconst moveMultiplier = 0.04;\nlet mouseX = 0;\nlet mouseY = 0;\nlet cameraAngleX = 50; // in degrees\nlet cameraAngleY = 0; // in degrees\nconst CAMERA_INIT_Y = 0.5;\nlet cameraOrigin = [14, CAMERA_INIT_Y, 14];\n\nconst sphereEntities = [\n  // radius, center x, y, z\n  [0.5, 0, 8, 0], // sun\n  [0.5, 15, 0, 15], // sphere\n];\nfunction createSpheresOnAxis() {\n  const radius = 0.05;\n  const distBetween = 0.1;\n  const num = 10;\n  for (let i = 0; i < num; i++) {\n    sphereEntities.push([radius, i * distBetween, 0, 0]);\n    sphereEntities.push([radius, 0, i * distBetween, 0]);\n    sphereEntities.push([radius, 0, 0, i * distBetween]);\n  }\n}\ncreateSpheresOnAxis();\n\nfunction createSquareMap() {\n  const radius = 0.05;\n  const distBetween = 1.0;\n  const cornerDistance = 10;\n\n  for (let i = 0; i <= cornerDistance; i = i + distBetween) {\n    sphereEntities.push([radius, i, 0, 0]);\n    sphereEntities.push([radius, 0, 0, i]);\n    sphereEntities.push([radius, i, 0, i]);\n    sphereEntities.push([radius, cornerDistance, 0, i]);\n    sphereEntities.push([radius, i, 0, cornerDistance]);\n  }\n  sphereEntities.push([radius * 2, cornerDistance, 0, cornerDistance]);\n}\ncreateSquareMap();\n\n// radius, centerx, y, z, normalx, y, z\nconst planeEntities = [\n  [20, 0, 0, 0, 0, 1, 0],\n  [5, 0, 9, 0, 0, 1, 0],\n  [1, 0, 0.9, 0, 0, 1, 0.4],\n];\n\n// pointMin left bottom corner (AAA), pointMax right top corner (BBB)\nconst boxEntities = [[4, 0, 0, 6, 2, 2]];\n\nexport function setup(\n  canvas: HTMLCanvasElement,\n  setIsLocked: (value: boolean) => void,\n) {\n  // fps counter\n  fpsStats.showPanel(0);\n  document.body.appendChild(fpsStats.dom);\n\n  // mouse lock\n  canvas.onclick = () => {\n    canvas.requestPointerLock();\n  };\n\n  function lockChangeAlert() {\n    if (document.pointerLockElement === canvas) {\n      setIsLocked(true);\n      console.log('locked');\n      document.addEventListener('mousemove', updatePosition, false);\n    } else {\n      setIsLocked(false);\n      console.log('unlocked');\n      document.removeEventListener('mousemove', updatePosition, false);\n    }\n  }\n  document.addEventListener('pointerlockchange', lockChangeAlert, false);\n\n  const kernal = canvasMainGpu(canvas);\n  return kernal;\n}\n\nfunction updatePosition(e: MouseEvent) {\n  mouseX += e.movementX * window.mouseSensitivity;\n  mouseY += e.movementY * window.mouseSensitivity;\n}\n\nexport function step(\n  kernal: any,\n  setUICameraAngleX: (value: number) => void,\n  setUICameraAngleY: (value: number) => void,\n  setUICameraOrigin: (origin: number[]) => void,\n) {\n  const shouldStopAnimate = window.location.search.indexOf('stop') >= 0;\n\n  function step() {\n    fpsStats.begin();\n    // update camera\n    cameraAngleX = (cameraAngleX + mouseX) % 360;\n    cameraAngleY = mathClamp(cameraAngleY + mouseY, -85, 85);\n    mouseX = 0;\n    mouseY = 0;\n\n    cameraOrigin = vecAdd(\n      cameraOrigin,\n      vecMultiplyNum(getMoveVector(cameraOrigin), moveMultiplier),\n    );\n\n    // render graphics\n    kernal(\n      cameraOrigin,\n      cameraAngleX,\n      cameraAngleY,\n      sphereEntities,\n      sphereEntities.length,\n      planeEntities,\n      planeEntities.length,\n      boxEntities,\n      boxEntities.length,\n    );\n\n    // set game info for React UI\n    setUICameraAngleX(cameraAngleX);\n    setUICameraAngleY(cameraAngleY);\n    setUICameraOrigin(cameraOrigin);\n    fpsStats.end();\n    shouldStopAnimate === false && window.requestAnimationFrame(step);\n  }\n  step();\n}\n\nfunction mathClamp(num: number, min: number, max: number): number {\n  return num <= min ? min : num >= max ? max : num;\n}\n\nfunction getMoveVector(cameraOrigin: number[]) {\n  // camera origin angle is facing -x\n  // in clockwise order, -x, -z, x, z  === W N E S\n  // forward is -x\n  // backward is +x\n  // left is +z\n  // right is -z\n  let moveVector = [0, 0, 0];\n  const x = 0;\n  const y = 1;\n  const z = 2;\n  if (keyPress['w']) {\n    moveVector[x] = -1;\n  }\n  if (keyPress['s']) {\n    moveVector[x] = 1;\n  }\n  if (keyPress['a']) {\n    moveVector[z] = 1;\n  }\n  if (keyPress['d']) {\n    moveVector[z] = -1;\n  }\n  moveVector = vecUnit(moveVector);\n\n  // rotate moveVector by cameraAngleX in counter-clockwise rotation\n  // x' = x·cosθ - y·sinθ\n  // y' = x·sinθ + y·cosθ\n  // in our 3d space looking from birds-eye view, x-axis is x and z-axis is y.\n  const oldX = moveVector[x];\n  const oldZ = moveVector[z];\n  const theta = (cameraAngleX * Math.PI) / 180;\n  const newX = oldX * Math.cos(theta) - oldZ * Math.sin(theta);\n  const newZ = oldX * Math.sin(theta) + oldZ * Math.cos(theta);\n  moveVector[x] = newX;\n  moveVector[z] = newZ;\n\n  // jump and gravity\n  if (keyPress[' ']) {\n    moveVector[y] = 1;\n  } else {\n    if (cameraOrigin[y] > CAMERA_INIT_Y) {\n      moveVector[y] = -1;\n    }\n  }\n\n  return moveVector;\n}\n","// Inspo: https://github.com/evanw/lightgl.js/blob/master/src/vector.js\n\nexport function vecNegative(vec: number[]): number[] {\n  return [-vec[0], -vec[1], -vec[2]];\n}\n\nexport function vecAdd(vec1: number[], vec2: number[]): number[] {\n  return [vec1[0] + vec2[0], vec1[1] + vec2[1], vec1[2] + vec2[2]];\n}\n\nexport function vecAddNum(vec1: number[], num: number): number[] {\n  return [vec1[0] + num, vec1[1] + num, vec1[2] + num];\n}\n\nexport function vecSubtract(vec1: number[], vec2: number[]): number[] {\n  return [vec1[0] - vec2[0], vec1[1] - vec2[1], vec1[2] - vec2[2]];\n}\n\nexport function vecSubtractNum(vec1: number[], num: number): number[] {\n  return [vec1[0] - num, vec1[1] - num, vec1[2] - num];\n}\n\nexport function vecMultiply(vec1: number[], vec2: number[]): number[] {\n  return [vec1[0] * vec2[0], vec1[1] * vec2[1], vec1[2] * vec2[2]];\n}\n\nexport function vecMultiplyNum(vec1: number[], num: number): number[] {\n  return [vec1[0] * num, vec1[1] * num, vec1[2] * num];\n}\n\nexport function vecDivide(vec1: number[], vec2: number[]): number[] {\n  return [vec1[0] / vec2[0], vec1[1] / vec2[1], vec1[2] / vec2[2]];\n}\n\nexport function vecDivideNum(vec1: number[], num: number): number[] {\n  return [vec1[0] / num, vec1[1] / num, vec1[2] / num];\n}\n\nexport function vecEquals(vec1: number[], vec2: number[]): number {\n  return vec1[0] === vec2[0] && vec1[1] === vec2[1] && vec1[2] === vec2[2]\n    ? 1\n    : 0;\n}\n\nexport function vecDot(vec1: number[], vec2: number[]): number {\n  return vec1[0] * vec2[0] + vec1[1] * vec2[1] + vec1[2] * vec2[2];\n}\n\nexport function vecCross(vec1: number[], vec2: number[]): number[] {\n  // x = 0;\n  // y = 1;\n  // z = 2;\n  return [\n    vec1[1] * vec2[2] - vec1[2] * vec2[1],\n    vec1[2] * vec2[0] - vec1[0] * vec2[2],\n    vec1[0] * vec2[1] - vec1[1] * vec2[0],\n  ];\n}\n\nexport function vecLength(vec: number[]): number {\n  const dot = vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2];\n  return Math.sqrt(dot);\n}\n\nexport function vecLengthSquared(vec: number[]): number {\n  const dot = vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2];\n  return dot;\n}\n\nexport function vecUnit(vec: number[]): number[] {\n  const dot = vec[0] * vec[0] + vec[1] * vec[1] + vec[2] * vec[2];\n  let length = Math.sqrt(dot);\n  if (length === 0) {\n    length = 1;\n  }\n  return [vec[0] / length, vec[1] / length, vec[2] / length];\n}\n\nexport function vecMin(vec: number[]): number {\n  return Math.min(Math.min(vec[0], vec[1]), vec[2]);\n}\n\nexport function vecMax(vec: number[]): number {\n  return Math.max(Math.max(vec[0], vec[1]), vec[2]);\n}\n\nconst returnTypeArray3 = (func: any) => {\n  return [func, { returnType: 'Array(3)' }];\n};\n\nconst createFuncDefinition = (\n  func: any,\n  argumentTypes: any,\n  returnType: string,\n) => {\n  return [func, { argumentTypes, returnType: returnType }];\n};\n\nconst returnTypeNumber = (func: any) => {\n  return [func, { returnType: 'Number' }];\n};\n\nconst vectorFunctions = [\n  returnTypeArray3(vecNegative),\n  returnTypeArray3(vecAdd),\n  returnTypeArray3(vecAddNum),\n  createFuncDefinition(\n    vecSubtract,\n    { vec1: 'Array(3)', vec2: 'Array(3)' },\n    'Array(3)',\n  ),\n\n  returnTypeArray3(vecSubtractNum),\n  returnTypeArray3(vecMultiply),\n  returnTypeArray3(vecMultiplyNum),\n  returnTypeArray3(vecDivide),\n  createFuncDefinition(\n    vecDivideNum,\n    { vec1: 'Array(3)', num: 'Number' },\n    'Array(3)',\n  ),\n  returnTypeNumber(vecEquals),\n  createFuncDefinition(\n    vecDot,\n    { vec1: 'Array(3)', vec2: 'Array(3)' },\n    'Number',\n  ),\n\n  returnTypeArray3(vecCross),\n  createFuncDefinition(vecLength, { vec: 'Array(3)' }, 'Number'),\n  createFuncDefinition(vecLengthSquared, { vec: 'Array(3)' }, 'Number'),\n\n  createFuncDefinition(vecUnit, { vec: 'Array(3)' }, 'Array(3)'),\n  returnTypeNumber(vecMin),\n  returnTypeNumber(vecMax),\n];\n\nexport default vectorFunctions;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAmCA;AACA;AAvEA;AACA;AADA;AACA;AAuEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAMA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AAEA;AAKA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAMA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7LA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAUA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}